<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:security="http://www.springframework.org/schema/security"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">
    <!-- enable use-expressions -->
	<security:http auto-config="true" use-expressions="true">
		<security:intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')" />		
		<!-- access denied page -->
		<security:access-denied-handler error-page="/403.action" />
		<security:form-login 
		    login-page="/login.action" 
		    default-target-url="/admin.action" 
			authentication-failure-url="/welcome.action" 
			username-parameter="username"
			password-parameter="password" />
		<security:logout logout-success-url="/login.action"  />
		<security:custom-filter ref="jCaptchaFilter" before="FORM_LOGIN_FILTER"/>		
		<!-- enable csrf protection -->
		<security:csrf/>
	</security:http>	
	<!-- Select users and user_roles from database -->
	<security:authentication-manager>
		<security:authentication-provider>
		   <security:password-encoder ref="encoder" />		
			<security:jdbc-user-service data-source-ref="datasource"
				users-by-username-query=
					"select username,password,enabled from user where username=?"
				authorities-by-username-query=
					"select username, role from user_role where username =?" />
		</security:authentication-provider>
	</security:authentication-manager>
	<bean id="encoder"
         class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
           <constructor-arg name="strength" value="9" />  
     </bean> 		  
	<bean id="jCaptchaFilter" class="com.website.web.system.JCaptchaFilter"/>   
	<bean id="captchaService" class="com.octo.captcha.service.image.DefaultManageableImageCaptchaService">
		<property name="captchaEngine">
			<bean class="com.website.web.system.GmailLikeCaptchaEngine"/>
		</property>
	</bean>
</beans>